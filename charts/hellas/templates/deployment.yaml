apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "hellas.labels" . | nindent 4 }}
  name: {{ include "hellas.fullname" . }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "hellas.selectorLabels" . | nindent 6 }}
  {{- if .Values.updateStrategy }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "hellas.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hellas.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: MODULE_REGISTRY_TYPE
              value: {{ .Values.moduleRegistryType | lower }}
          image: "{{ .Values.imageKey.repository }}:{{ .Values.imageKey.tag }}"
          imagePullPolicy: {{ .Values.imageKey.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          livenessProbe:
            httpGet:
              path: "/healthcheck"
              port: 8443
              scheme: HTTPS
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            httpGet:
              path: "/healthcheck"
              port: 8443
              scheme: HTTPS
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- if .Values.resources }}
          resources: {{ toYaml .Values.resources | nindent 12 }}
          {{- end }}
          ports:
            - name: hellas
              containerPort: 8443
              protocol: TCP
          volumeMounts:
            - name: app
              mountPath: "/app"
              readOnly: true
      initContainers:
        - name: copy
          image: alpine:latest
          volumeMounts:
          - name: secret
            mountPath: /secret
          - name: config
            mountPath: /config
          - name: app
            mountPath: /app
          command:
          - "sh"
          - "-c"
          - "cp -v /secret/* /config/* /app"
      volumes:
        - name: secret
          secret:
            secretName: {{ include "hellas.fullname" . }}
        - name: config
          configMap:
            name: {{ include "hellas.fullname" . }}
        - name: app
          emptyDir: {}
      {{- if .Values.tolerations }}
      tolerations: {{- toYaml .Values.tolerations | nindent 8}}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- toYaml .Values.affinity | nindent 8}}
      {{- end }}

